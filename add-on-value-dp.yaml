apiVersion: v1
kind: Service
metadata:
  name: public-kong-manager
  namespace: kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.46.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.9"
    enable-metrics: "true"
spec:
  type: LoadBalancer
  loadBalancerSourceRanges:
    - 27.50.64.0/18
    - 39.208.0.0/12
    - 103.16.128.0/22
    - 103.20.124.0/22
    - 103.76.16.0/22
    - 118.97.0.0/16
    - 139.255.0.0/16
    - 180.214.232.0/21
    - 182.253.0.0/16
  ports:
  - name: default
    port: 80
    targetPort: 80
    protocol: TCP
  - name: kong-manager
    port: 8002
    targetPort: 8002
    protocol: TCP
  - name: kong-api
    port: 8001
    targetPort: 8001
    protocol : TCP
  - name: kong-portal-api
    port: 8004
    targetPort: 8004
    protocol : TCP
  - name: kong-clustertelemetry
    port: 8006
    targetPort: 8006
    protocol : TCP
  - name: auth
    port : 8080
    targetPort: 80
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong-cp"
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: public-kong-manager-portal-api
#   namespace: kong
#   labels:
#     app.kubernetes.io/name: kong
#     helm.sh/chart: kong-2.46.0
#     app.kubernetes.io/instance: "release-name"
#     app.kubernetes.io/managed-by: "Helm"
    
#     app.kubernetes.io/version: "3.9"
#     enable-metrics: "true"
# spec:
#   type: LoadBalancer
#   ports:
#   - name: default
#     port: 80
#     targetPort: 8004
#     protocol: TCP
#   - name: kong-portal-api
#     port: 8004
#     targetPort: 8004
#     protocol : TCP
#   selector:
#     app.kubernetes.io/name: kong
#     app.kubernetes.io/component: app
#     app.kubernetes.io/instance: "release-name"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: kong
data:
  nginx.conf: |
    server {
      listen 8080;
      
      # Basic Authentication
      auth_basic "Restricted Access";
      auth_basic_user_file /etc/nginx/.htpasswd;  # Path to the .htpasswd file

      location / {
        proxy_pass http://kong-cp-kong-manager.kong.svc.cluster.local:8002;  # DNS format to Kong Admin API
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port 8080;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-reverse-proxy
  namespace: kong
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "kong-cp"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kong
        app.kubernetes.io/component: app
        app.kubernetes.io/instance: "kong-cp"
    spec:
      imagePullSecrets:
        - name: git-auth
      containers:
        - name: nginx
          image: registry.gitlab.com/caco6121051/kong:nginx
          # volumeMounts:
          #   - name: htpasswd-volume
          #     mountPath: /etc/nginx
          #     subPath: .htpasswd  # Mounting the .htpasswd file for authentication
            # - name: nginx-conf
            #   mountPath: /etc/nginx/custom_nginx.conf
            #   subPath: nginx.conf  # refer to specific secret key
            # - name: nginx-conf
            #   mountPath: /etc/nginx/conf.d/default.conf
          env: 
            - name: PROXY_PASS
              value: http://kong-cp-kong-manager.kong.svc.cluster.local:8002
          ports:
            - containerPort: 80  # Port where NGINX will listen for incoming requests
          resources:
            limits: {}
            requests:
              ephemeral-storage: 100Mi
              memory: 100Mi
              cpu: 100m
      # volumes:
      #   - name: htpasswd-volume
      #     secret:
      #       secretName: kong-admin-auth  # Secret containing the .htpasswd file
      #   - name: nginx-conf
      #     configMap:
      #       name: nginx-conf  # ConfigMap for the custom NGINX configuration

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-reverse-proxy
  namespace: kong
spec:
  ports:
    - port: 8080  # Exposing port 8080 to access NGINX
      targetPort: 80
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong-cp"

